% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MultiEval.R
\name{MultiEval}
\alias{MultiEval}
\alias{Cat_Eval}
\alias{Cont_Eval}
\alias{Count_Eval}
\alias{Surv_Eval}
\title{Evaluate features across multiple outcomes and outcome types}
\usage{
MultiEval(X, Ztype, data, continuous = "quantile",
          quantseq = seq(0,1,0.05), wt=NULL,
          evalmethod = "avgIG", alpha = 0.05,
          IGcutoff = 0.95, splitmin)

Cat_Eval(X, m, Z, k, data, continuous,
         quantseq = seq(0,1,0.05), splitmin=10)

Cont_Eval(X, m, Z, k, data, continuous,
          quantseq = seq(0,1,0.05), splitmin=10)

Count_Eval(X, m, Z, k, data, continuous,
           quantseq = seq(0,1,0.05), splitmin=10)

Surv_Eval(X, m, Z, k, data, continuous,
          quantseq = seq(0,1,0.05), splitmin=10)
}
\arguments{
\item{X}{Data frame object of all features to be evaluated.}

\item{Ztype}{Vector containing a list of outcome types ("Cat", "Cont", "Count", "Surv")
and a data frame object of all outcomes being evaluated.}

\item{data}{The full dataset to be evaluated.}

\item{continuous}{How to handle partition evaluation of continuous features, in which
all potential split candidates may be examined ("all") or split candidates are derived
from quantiles ("quantile").}

\item{quantseq}{A user specified sequence ranging from 0 to 1 from which quantiles may
be specified (ex: seq(0,1,0.05)). If \code{continuous} and \code{quantseq} are not
specified the function will default to the "all" setting for continuous variables with
fewer than 100 unique values. If there are more than 100 unique values, the function
will use the "quantile" option with the default setting of seq(0,1,0.05).}

\item{wt}{The outcome variable weights to be applied in multi-target evaluations.
Default weights are set to \code{NULL}, indicating equal target variable importance.}

\item{evalmethod}{The method used to evaluate standardized proportion of information
gain across targets and target types.}

\item{alpha}{The significance level to be used in \code{evalmethod} if a p-value based
method (such as ) is selected. The default value for \code{alpha} is set to 0.05.}

\item{IGcutoff}{The IG cutoff threshold to be used for \code{evalmethod} if methods
xxx or yyyy are selected. The default value for \code{IGcutoff} is 0.95.}

\item{splitmin}{The minimum sample size \code{n} required for a node to be partitioned.
This is passed internally from \code{MTPart} and is used to assess feasibility of
feature binarization for evaluation (i.e., a binarized feature must result in
partitions with sufficient observations in both child nodes). The default value is of
\code{splitmin} is set to 10.}

\item{m}{Specific feature to evaluate. Used only in \code{Cat_Eval, Cont_Eval,
Count_Eval, Surv_Eval}.}

\item{Z}{Data frame object of all outcomes being evaluated. Used only in \code{Cat_Eval,
Cont_Eval, Count_Eval, Surv_Eval}.}

\item{k}{Specific outcome to evaluate. Used only in \code{Cat_Eval, Cont_Eval, Count_Eval,
Surv_Eval}.}
}
\value{
The \code{MultiEval} function returns a vector including of the evaluation
metrics for each possible split of each feature in the dataset.
}
\description{
Evaluates multiple outcome variables of different types for a set of features.
\code{MultiEval} evaluates multiple outcomes of varying types across all features.
\code{Cat_Eval} performs evaluation of a categorical outcome across all features.
\code{Cont_Eval} performs evaluation of a continuous outcome across all features.
\code{Count_Eval} performs evaluation of an event rate or count outcome across all features.
\code{Surv_Eval} performs evaluation of a time-to-event or survival outcome across all features
}
\details{
The following function requires inputs including all features to be evaluated
(\code{X}), which specific feature to evaluate (\code{m}), all outcomes being evaluated
(\code{Z}), the specific outcome to evaluate (\code{k}), and the data (\code{data}).
In addition, there are options for the user to specify how to handle partition evaluation
of continuous features, in which all potential split candidates may be examined ("all")
or split candidates are derived from quantiles ("quantile"); the option \code{quantseq}
takes a user specified sequence ranging from 0 to 1 from which quantiles may be specified
(ex: seq(0,1,0.05)). If \code{continuous} and \code{quantseq} are not manually specified
the function will default to the "all" setting for continuous variables with fewer than
100 unique values. If there are more than 100 unique values, the function will use the
"quantile" option with the default setting of seq(0,1,0.05).

The function outputs a matrix including information about the outcome (Zk), outcome
variable type (Ztype), the feature (Xm), feature type (Xtype), the split threshold
being evaluated (Split), evaluation method (Eval), and the entropy of a partition
using that split threshold (SplitEntropy), information gain relative to the root node
(Inf_Gain) and the proportion of information gain (Inf_GainProp), the significance of
association between the split threshold and outcome (P_Value), relative ranking of split
thresholds based on how much their respective partitions reduced entropy (Rank), and
the standard normalized proportion of information gain associated with each threshold.

All evaluation functions operate internally within the multi-target evaluation
function in which all outcomes and all features are assessed at a node. Therefore,
m and k options are specified by a loop from the user supplied inputs: X, Z, and data.
Again, continuous and quantseq are optional arguments initialized by the user.
}
